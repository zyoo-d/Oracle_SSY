--tblExamDone과정4추가

INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'자바에서는 클래스를 단 하나만 상속할 수 있지만, 인터페이스는 여러 개를 동시에 구현할 수 있습니다. ',75,4,6);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'자바에서는 클래스를 단 하나만 상속할 수 있지만, 인터페이스는 여러 개를 동시에 구현할 수 있습니다. ',76,4,6);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'자바에서는 클래스를 단 하나만 상속할 수 있지만, 인터페이스는 여러 개를 동시에 구현할 수 있습니다. ',77,4,6);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'자바에서는 클래스를 단 하나만 상속할 수 있지만, 인터페이스는 여러 개를 동시에 구현할 수 있습니다. ',78,4,6);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'자바에서는 클래스를 단 하나만 상속할 수 있지만, 인터페이스는 여러 개를 동시에 구현할 수 있습니다. ',79,4,6);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'자바에서는 클래스를 단 하나만 상속할 수 있지만, 인터페이스는 여러 개를 동시에 구현할 수 있습니다. ',80,4,6);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'자바에서는 클래스를 단 하나만 상속할 수 있지만, 인터페이스는 여러 개를 동시에 구현할 수 있습니다. ',81,4,6);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'자바에서는 클래스를 단 하나만 상속할 수 있지만, 인터페이스는 여러 개를 동시에 구현할 수 있습니다. ',82,4,6);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'자바에서는 클래스를 단 하나만 상속할 수 있지만, 인터페이스는 여러 개를 동시에 구현할 수 있습니다. ',83,4,6);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),' ',84,4,6);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'자바에서는 클래스를 단 하나만 상속할 수 있지만, 인터페이스는 여러 개를 동시에 구현할 수 있습니다. ',85,4,6);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'자바에서는 클래스를 단 하나만 상속할 수 있지만, 인터페이스는 여러 개를 동시에 구현할 수 있습니다. ',86,4,6);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'자바에서는 클래스를 단 하나만 상속할 수 있지만, 인터페이스는 여러 개를 동시에 구현할 수 있습니다. ',87,4,6);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'자바에서는 클래스를 단 하나만 상속할 수 있지만, 인터페이스는 여러 개를 동시에 구현할 수 있습니다. ',88,4,6);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'자바에서는 클래스를 단 하나만 상속할 수 있지만, 인터페이스는 여러 개를 동시에 구현할 수 있습니다. ',89,4,6);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'자바에서는 클래스를 단 하나만 상속할 수 있지만, 인터페이스는 여러 개를 동시에 구현할 수 있습니다. ',90,4,6);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'자바에서는 클래스를 단 하나만 상속할 수 있지만, 인터페이스는 여러 개를 동시에 구현할 수 있습니다. ',91,4,6);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'자바에서는 클래스를 단 하나만 상속할 수 있지만, 인터페이스는 여러 개를 동시에 구현할 수 있습니다. ',92,4,6);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),' ',93,4,6);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'자바에서는 클래스를 단 하나만 상속할 수 있지만, 인터페이스는 여러 개를 동시에 구현할 수 있습니다. ',94,4,6);

INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone), 'O', 75, 4, 8);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone), 'O', 76, 4, 8);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone), 'O', 77, 4, 8);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone), 'O', 78, 4, 8);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone), 'O', 79, 4, 8);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone), 'O', 80, 4, 8);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone), 'O', 81, 4, 8);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone), 'O', 82, 4, 8);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone), 'O', 83, 4, 8);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone), 'O', 84, 4, 8);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone), 'O', 85, 4, 8);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone), 'O', 86, 4, 8);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone), 'O', 87, 4, 8);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone), 'O', 88, 4, 8);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone), 'O', 89, 4, 8);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone), 'O', 90, 4, 8);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone), 'O', 91, 4, 8);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone), 'O', 92, 4, 8);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone), 'O', 93, 4, 8);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone), 'O', 94, 4, 8);

INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'오버로딩은 같은 이름의 메서드를 매개변수의 유형이나 개수를 달리하여 여러 개 정의하는 것을 의미하며, 컴파일 시간에 결정됩니다. 오버라이딩은 상속받은 메서드를 하위 클래스가 재정의하는 것을 말하며, 실행 시간에 결정됩니다. 오버로딩 활용 사례: 같은 이름의 함수로 여러 타입의 인자를 받아 다른 연산을 수행. 오버라이딩 활용 사례: 상위 클래스의 메서드를 하위 클래스가 자신의 특성에 맞게 재정의하여 사용.',75,4,14);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),' ',76,4,14);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'오버로딩은 같은 이름의 메서드를 매개변수의 유형이나 개수를 달리하여 여러 개 정의하는 것을 의미하며, 컴파일 시간에 결정됩니다. 오버라이딩은 상속받은 메서드를 하위 클래스가 재정의하는 것을 말하며, 실행 시간에 결정됩니다. 오버로딩 활용 사례: 같은 이름의 함수로 여러 타입의 인자를 받아 다른 연산을 수행. 오버라이딩 활용 사례: 상위 클래스의 메서드를 하위 클래스가 자신의 특성에 맞게 재정의하여 사용.',77,4,14);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'오버로딩은 같은 이름의 메서드를 매개변수의 유형이나 개수를 달리하여 여러 개 정의하는 것을 의미하며, 컴파일 시간에 결정됩니다. 오버라이딩은 상속받은 메서드를 하위 클래스가 재정의하는 것을 말하며, 실행 시간에 결정됩니다. 오버로딩 활용 사례: 같은 이름의 함수로 여러 타입의 인자를 받아 다른 연산을 수행. 오버라이딩 활용 사례: 상위 클래스의 메서드를 하위 클래스가 자신의 특성에 맞게 재정의하여 사용.',78,4,14);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'오버로딩은 같은 이름의 메서드를 매개변수의 유형이나 개수를 달리하여 여러 개 정의하는 것을 의미하며, 컴파일 시간에 결정됩니다. 오버라이딩은 상속받은 메서드를 하위 클래스가 재정의하는 것을 말하며, 실행 시간에 결정됩니다. 오버로딩 활용 사례: 같은 이름의 함수로 여러 타입의 인자를 받아 다른 연산을 수행. 오버라이딩 활용 사례: 상위 클래스의 메서드를 하위 클래스가 자신의 특성에 맞게 재정의하여 사용.',79,4,14);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),' ',80,4,14);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),' ',81,4,14);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'오버로딩은 같은 이름의 메서드를 매개변수의 유형이나 개수를 달리하여 여러 개 정의하는 것을 의미하며, 컴파일 시간에 결정됩니다. 오버라이딩은 상속받은 메서드를 하위 클래스가 재정의하는 것을 말하며, 실행 시간에 결정됩니다. 오버로딩 활용 사례: 같은 이름의 함수로 여러 타입의 인자를 받아 다른 연산을 수행. 오버라이딩 활용 사례: 상위 클래스의 메서드를 하위 클래스가 자신의 특성에 맞게 재정의하여 사용.',82,4,14);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'오버로딩은 같은 이름의 메서드를 매개변수의 유형이나 개수를 달리하여 여러 개 정의하는 것을 의미하며, 컴파일 시간에 결정됩니다. 오버라이딩은 상속받은 메서드를 하위 클래스가 재정의하는 것을 말하며, 실행 시간에 결정됩니다. 오버로딩 활용 사례: 같은 이름의 함수로 여러 타입의 인자를 받아 다른 연산을 수행. 오버라이딩 활용 사례: 상위 클래스의 메서드를 하위 클래스가 자신의 특성에 맞게 재정의하여 사용.',83,4,14);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'오버로딩은 같은 이름의 메서드를 매개변수의 유형이나 개수를 달리하여 여러 개 정의하는 것을 의미하며, 컴파일 시간에 결정됩니다. 오버라이딩은 상속받은 메서드를 하위 클래스가 재정의하는 것을 말하며, 실행 시간에 결정됩니다. 오버로딩 활용 사례: 같은 이름의 함수로 여러 타입의 인자를 받아 다른 연산을 수행. 오버라이딩 활용 사례: 상위 클래스의 메서드를 하위 클래스가 자신의 특성에 맞게 재정의하여 사용.',84,4,14);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),' ',85,4,14);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'오버로딩은 같은 이름의 메서드를 매개변수의 유형이나 개수를 달리하여 여러 개 정의하는 것을 의미하며, 컴파일 시간에 결정됩니다. 오버라이딩은 상속받은 메서드를 하위 클래스가 재정의하는 것을 말하며, 실행 시간에 결정됩니다. 오버로딩 활용 사례: 같은 이름의 함수로 여러 타입의 인자를 받아 다른 연산을 수행. 오버라이딩 활용 사례: 상위 클래스의 메서드를 하위 클래스가 자신의 특성에 맞게 재정의하여 사용.',86,4,14);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'오버로딩은 같은 이름의 메서드를 매개변수의 유형이나 개수를 달리하여 여러 개 정의하는 것을 의미하며, 컴파일 시간에 결정됩니다. 오버라이딩은 상속받은 메서드를 하위 클래스가 재정의하는 것을 말하며, 실행 시간에 결정됩니다. 오버로딩 활용 사례: 같은 이름의 함수로 여러 타입의 인자를 받아 다른 연산을 수행. 오버라이딩 활용 사례: 상위 클래스의 메서드를 하위 클래스가 자신의 특성에 맞게 재정의하여 사용.',87,4,14);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'오버로딩은 같은 이름의 메서드를 매개변수의 유형이나 개수를 달리하여 여러 개 정의하는 것을 의미하며, 컴파일 시간에 결정됩니다. 오버라이딩은 상속받은 메서드를 하위 클래스가 재정의하는 것을 말하며, 실행 시간에 결정됩니다. 오버로딩 활용 사례: 같은 이름의 함수로 여러 타입의 인자를 받아 다른 연산을 수행. 오버라이딩 활용 사례: 상위 클래스의 메서드를 하위 클래스가 자신의 특성에 맞게 재정의하여 사용.',88,4,14);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),' ',89,4,14);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'오버로딩은 같은 이름의 메서드를 매개변수의 유형이나 개수를 달리하여 여러 개 정의하는 것을 의미하며, 컴파일 시간에 결정됩니다. 오버라이딩은 상속받은 메서드를 하위 클래스가 재정의하는 것을 말하며, 실행 시간에 결정됩니다. 오버로딩 활용 사례: 같은 이름의 함수로 여러 타입의 인자를 받아 다른 연산을 수행. 오버라이딩 활용 사례: 상위 클래스의 메서드를 하위 클래스가 자신의 특성에 맞게 재정의하여 사용.',90,4,14);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'오버로딩은 같은 이름의 메서드를 매개변수의 유형이나 개수를 달리하여 여러 개 정의하는 것을 의미하며, 컴파일 시간에 결정됩니다. 오버라이딩은 상속받은 메서드를 하위 클래스가 재정의하는 것을 말하며, 실행 시간에 결정됩니다. 오버로딩 활용 사례: 같은 이름의 함수로 여러 타입의 인자를 받아 다른 연산을 수행. 오버라이딩 활용 사례: 상위 클래스의 메서드를 하위 클래스가 자신의 특성에 맞게 재정의하여 사용.',91,4,14);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'오버로딩은 같은 이름의 메서드를 매개변수의 유형이나 개수를 달리하여 여러 개 정의하는 것을 의미하며, 컴파일 시간에 결정됩니다. 오버라이딩은 상속받은 메서드를 하위 클래스가 재정의하는 것을 말하며, 실행 시간에 결정됩니다. 오버로딩 활용 사례: 같은 이름의 함수로 여러 타입의 인자를 받아 다른 연산을 수행. 오버라이딩 활용 사례: 상위 클래스의 메서드를 하위 클래스가 자신의 특성에 맞게 재정의하여 사용.',92,4,14);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),' ',93,4,14);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'오버로딩은 같은 이름의 메서드를 매개변수의 유형이나 개수를 달리하여 여러 개 정의하는 것을 의미하며, 컴파일 시간에 결정됩니다. 오버라이딩은 상속받은 메서드를 하위 클래스가 재정의하는 것을 말하며, 실행 시간에 결정됩니다. 오버로딩 활용 사례: 같은 이름의 함수로 여러 타입의 인자를 받아 다른 연산을 수행. 오버라이딩 활용 사례: 상위 클래스의 메서드를 하위 클래스가 자신의 특성에 맞게 재정의하여 사용.',94,4,14);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'프로젝트 완료',75,4,20);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'프로젝트 완료',76,4,20);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'프로젝트 완료',77,4,20);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'프로젝트 완료',78,4,20);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'프로젝트 완료',79,4,20);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'프로젝트 완료',80,4,20);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'프로젝트 완료',81,4,20);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'프로젝트 완료',82,4,20);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'프로젝트 완료',83,4,20);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'프로젝트 완료',84,4,20);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'프로젝트 완료',85,4,20);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'프로젝트 완료',86,4,20);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'프로젝트 완료',87,4,20);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'프로젝트 완료',88,4,20);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'프로젝트 완료',89,4,20);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'프로젝트 완료',90,4,20);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'프로젝트 완료',91,4,20);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'프로젝트 완료',92,4,20);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'프로젝트 완료',93,4,20);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'프로젝트 완료',94,4,20);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'이벤트 위임은 하위 요소에 각각 이벤트 핸들러를 추가하는 대신, 상위 요소에 하나의 이벤트 핸들러를 추가하여 여러 하위 요소의 이벤트를 관리하는 방식입니다. 이는 메모리 사용량을 줄이고, 동적으로 요소가 추가될 때 별도의 이벤트 리스너를 추가할 필요가 없게 해줍니다.',75,4,23);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'이벤트 위임은 하위 요소에 각각 이벤트 핸들러를 추가하는 대신, 상위 요소에 하나의 이벤트 핸들러를 추가하여 여러 하위 요소의 이벤트를 관리하는 방식입니다. 이는 메모리 사용량을 줄이고, 동적으로 요소가 추가될 때 별도의 이벤트 리스너를 추가할 필요가 없게 해줍니다.',76,4,23);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'이벤트 위임은 하위 요소에 각각 이벤트 핸들러를 추가하는 대신, 상위 요소에 하나의 이벤트 핸들러를 추가하여 여러 하위 요소의 이벤트를 관리하는 방식입니다. 이는 메모리 사용량을 줄이고, 동적으로 요소가 추가될 때 별도의 이벤트 리스너를 추가할 필요가 없게 해줍니다.',77,4,23);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),' ',78,4,23);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'이벤트 위임은 하위 요소에 각각 이벤트 핸들러를 추가하는 대신, 상위 요소에 하나의 이벤트 핸들러를 추가하여 여러 하위 요소의 이벤트를 관리하는 방식입니다. 이는 메모리 사용량을 줄이고, 동적으로 요소가 추가될 때 별도의 이벤트 리스너를 추가할 필요가 없게 해줍니다.',79,4,23);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'이벤트 위임은 하위 요소에 각각 이벤트 핸들러를 추가하는 대신, 상위 요소에 하나의 이벤트 핸들러를 추가하여 여러 하위 요소의 이벤트를 관리하는 방식입니다. 이는 메모리 사용량을 줄이고, 동적으로 요소가 추가될 때 별도의 이벤트 리스너를 추가할 필요가 없게 해줍니다.',80,4,23);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'이벤트 위임은 하위 요소에 각각 이벤트 핸들러를 추가하는 대신, 상위 요소에 하나의 이벤트 핸들러를 추가하여 여러 하위 요소의 이벤트를 관리하는 방식입니다. 이는 메모리 사용량을 줄이고, 동적으로 요소가 추가될 때 별도의 이벤트 리스너를 추가할 필요가 없게 해줍니다.',81,4,23);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'이벤트 위임은 하위 요소에 각각 이벤트 핸들러를 추가하는 대신, 상위 요소에 하나의 이벤트 핸들러를 추가하여 여러 하위 요소의 이벤트를 관리하는 방식입니다. 이는 메모리 사용량을 줄이고, 동적으로 요소가 추가될 때 별도의 이벤트 리스너를 추가할 필요가 없게 해줍니다.',82,4,23);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),' ',83,4,23);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'이벤트 위임은 하위 요소에 각각 이벤트 핸들러를 추가하는 대신, 상위 요소에 하나의 이벤트 핸들러를 추가하여 여러 하위 요소의 이벤트를 관리하는 방식입니다. 이는 메모리 사용량을 줄이고, 동적으로 요소가 추가될 때 별도의 이벤트 리스너를 추가할 필요가 없게 해줍니다.',84,4,23);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),' ',85,4,23);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'이벤트 위임은 하위 요소에 각각 이벤트 핸들러를 추가하는 대신, 상위 요소에 하나의 이벤트 핸들러를 추가하여 여러 하위 요소의 이벤트를 관리하는 방식입니다. 이는 메모리 사용량을 줄이고, 동적으로 요소가 추가될 때 별도의 이벤트 리스너를 추가할 필요가 없게 해줍니다.',86,4,23);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'이벤트 위임은 하위 요소에 각각 이벤트 핸들러를 추가하는 대신, 상위 요소에 하나의 이벤트 핸들러를 추가하여 여러 하위 요소의 이벤트를 관리하는 방식입니다. 이는 메모리 사용량을 줄이고, 동적으로 요소가 추가될 때 별도의 이벤트 리스너를 추가할 필요가 없게 해줍니다.',87,4,23);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'이벤트 위임은 하위 요소에 각각 이벤트 핸들러를 추가하는 대신, 상위 요소에 하나의 이벤트 핸들러를 추가하여 여러 하위 요소의 이벤트를 관리하는 방식입니다. 이는 메모리 사용량을 줄이고, 동적으로 요소가 추가될 때 별도의 이벤트 리스너를 추가할 필요가 없게 해줍니다.',88,4,23);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'이벤트 위임은 하위 요소에 각각 이벤트 핸들러를 추가하는 대신, 상위 요소에 하나의 이벤트 핸들러를 추가하여 여러 하위 요소의 이벤트를 관리하는 방식입니다. 이는 메모리 사용량을 줄이고, 동적으로 요소가 추가될 때 별도의 이벤트 리스너를 추가할 필요가 없게 해줍니다.',89,4,23);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'이벤트 위임은 하위 요소에 각각 이벤트 핸들러를 추가하는 대신, 상위 요소에 하나의 이벤트 핸들러를 추가하여 여러 하위 요소의 이벤트를 관리하는 방식입니다. 이는 메모리 사용량을 줄이고, 동적으로 요소가 추가될 때 별도의 이벤트 리스너를 추가할 필요가 없게 해줍니다.',90,4,23);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'이벤트 위임은 하위 요소에 각각 이벤트 핸들러를 추가하는 대신, 상위 요소에 하나의 이벤트 핸들러를 추가하여 여러 하위 요소의 이벤트를 관리하는 방식입니다. 이는 메모리 사용량을 줄이고, 동적으로 요소가 추가될 때 별도의 이벤트 리스너를 추가할 필요가 없게 해줍니다.',91,4,23);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'이벤트 위임은 하위 요소에 각각 이벤트 핸들러를 추가하는 대신, 상위 요소에 하나의 이벤트 핸들러를 추가하여 여러 하위 요소의 이벤트를 관리하는 방식입니다. 이는 메모리 사용량을 줄이고, 동적으로 요소가 추가될 때 별도의 이벤트 리스너를 추가할 필요가 없게 해줍니다.',92,4,23);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),' ',93,4,23);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'이벤트 위임은 하위 요소에 각각 이벤트 핸들러를 추가하는 대신, 상위 요소에 하나의 이벤트 핸들러를 추가하여 여러 하위 요소의 이벤트를 관리하는 방식입니다. 이는 메모리 사용량을 줄이고, 동적으로 요소가 추가될 때 별도의 이벤트 리스너를 추가할 필요가 없게 해줍니다.',94,4,23);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'호이스팅은 함수, 변수, 클래스의 선언이 코드 실행 전 해당 범위의 최상단으로 끌어올려지는 것 같은 자바스크립트의 동작 방식을 말합니다. 변수의 경우, 선언은 호이스팅되지만 초기화는 호이스팅되지 않아, 선언 전에 변수를 사용하면 undefined가 됩니다.',75,4,24);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'호이스팅은 함수, 변수, 클래스의 선언이 코드 실행 전 해당 범위의 최상단으로 끌어올려지는 것 같은 자바스크립트의 동작 방식을 말합니다. 변수의 경우, 선언은 호이스팅되지만 초기화는 호이스팅되지 않아, 선언 전에 변수를 사용하면 undefined가 됩니다.',76,4,24);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'호이스팅은 함수, 변수, 클래스의 선언이 코드 실행 전 해당 범위의 최상단으로 끌어올려지는 것 같은 자바스크립트의 동작 방식을 말합니다. 변수의 경우, 선언은 호이스팅되지만 초기화는 호이스팅되지 않아, 선언 전에 변수를 사용하면 undefined가 됩니다.',77,4,24);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'호이스팅은 함수, 변수, 클래스의 선언이 코드 실행 전 해당 범위의 최상단으로 끌어올려지는 것 같은 자바스크립트의 동작 방식을 말합니다. 변수의 경우, 선언은 호이스팅되지만 초기화는 호이스팅되지 않아, 선언 전에 변수를 사용하면 undefined가 됩니다.',78,4,24);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),' ',79,4,24);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'호이스팅은 함수, 변수, 클래스의 선언이 코드 실행 전 해당 범위의 최상단으로 끌어올려지는 것 같은 자바스크립트의 동작 방식을 말합니다. 변수의 경우, 선언은 호이스팅되지만 초기화는 호이스팅되지 않아, 선언 전에 변수를 사용하면 undefined가 됩니다.',80,4,24);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),' ',81,4,24);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'호이스팅은 함수, 변수, 클래스의 선언이 코드 실행 전 해당 범위의 최상단으로 끌어올려지는 것 같은 자바스크립트의 동작 방식을 말합니다. 변수의 경우, 선언은 호이스팅되지만 초기화는 호이스팅되지 않아, 선언 전에 변수를 사용하면 undefined가 됩니다.',82,4,24);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'호이스팅은 함수, 변수, 클래스의 선언이 코드 실행 전 해당 범위의 최상단으로 끌어올려지는 것 같은 자바스크립트의 동작 방식을 말합니다. 변수의 경우, 선언은 호이스팅되지만 초기화는 호이스팅되지 않아, 선언 전에 변수를 사용하면 undefined가 됩니다.',83,4,24);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'호이스팅은 함수, 변수, 클래스의 선언이 코드 실행 전 해당 범위의 최상단으로 끌어올려지는 것 같은 자바스크립트의 동작 방식을 말합니다. 변수의 경우, 선언은 호이스팅되지만 초기화는 호이스팅되지 않아, 선언 전에 변수를 사용하면 undefined가 됩니다.',84,4,24);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),' ',85,4,24);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'호이스팅은 함수, 변수, 클래스의 선언이 코드 실행 전 해당 범위의 최상단으로 끌어올려지는 것 같은 자바스크립트의 동작 방식을 말합니다. 변수의 경우, 선언은 호이스팅되지만 초기화는 호이스팅되지 않아, 선언 전에 변수를 사용하면 undefined가 됩니다.',86,4,24);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'호이스팅은 함수, 변수, 클래스의 선언이 코드 실행 전 해당 범위의 최상단으로 끌어올려지는 것 같은 자바스크립트의 동작 방식을 말합니다. 변수의 경우, 선언은 호이스팅되지만 초기화는 호이스팅되지 않아, 선언 전에 변수를 사용하면 undefined가 됩니다.',87,4,24);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'호이스팅은 함수, 변수, 클래스의 선언이 코드 실행 전 해당 범위의 최상단으로 끌어올려지는 것 같은 자바스크립트의 동작 방식을 말합니다. 변수의 경우, 선언은 호이스팅되지만 초기화는 호이스팅되지 않아, 선언 전에 변수를 사용하면 undefined가 됩니다.',88,4,24);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'호이스팅은 함수, 변수, 클래스의 선언이 코드 실행 전 해당 범위의 최상단으로 끌어올려지는 것 같은 자바스크립트의 동작 방식을 말합니다. 변수의 경우, 선언은 호이스팅되지만 초기화는 호이스팅되지 않아, 선언 전에 변수를 사용하면 undefined가 됩니다.',89,4,24);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'호이스팅은 함수, 변수, 클래스의 선언이 코드 실행 전 해당 범위의 최상단으로 끌어올려지는 것 같은 자바스크립트의 동작 방식을 말합니다. 변수의 경우, 선언은 호이스팅되지만 초기화는 호이스팅되지 않아, 선언 전에 변수를 사용하면 undefined가 됩니다.',90,4,24);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'호이스팅은 함수, 변수, 클래스의 선언이 코드 실행 전 해당 범위의 최상단으로 끌어올려지는 것 같은 자바스크립트의 동작 방식을 말합니다. 변수의 경우, 선언은 호이스팅되지만 초기화는 호이스팅되지 않아, 선언 전에 변수를 사용하면 undefined가 됩니다.',91,4,24);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),' ',92,4,24);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'호이스팅은 함수, 변수, 클래스의 선언이 코드 실행 전 해당 범위의 최상단으로 끌어올려지는 것 같은 자바스크립트의 동작 방식을 말합니다. 변수의 경우, 선언은 호이스팅되지만 초기화는 호이스팅되지 않아, 선언 전에 변수를 사용하면 undefined가 됩니다.',93,4,24);
INSERT INTO tblExamDone (edpk, exanswer, stupk, ocpk, expk) VALUES ((SELECT NVL(MAX(edpk), 0) + 1 FROM tblExamDone),'호이스팅은 함수, 변수, 클래스의 선언이 코드 실행 전 해당 범위의 최상단으로 끌어올려지는 것 같은 자바스크립트의 동작 방식을 말합니다. 변수의 경우, 선언은 호이스팅되지만 초기화는 호이스팅되지 않아, 선언 전에 변수를 사용하면 undefined가 됩니다.',94,4,24);
commit;